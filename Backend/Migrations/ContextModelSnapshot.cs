// <auto-generated />
using System;
using EventSourceDemo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace VirtualVoid.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("EventSourceDemo.Board", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("boards");
                });

            modelBuilder.Entity("EventSourceDemo.Commit", b =>
                {
                    b.Property<int>("order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("className")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("objectId")
                        .HasColumnType("TEXT");

                    b.Property<string>("payload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("order");

                    b.ToTable("commits");
                });

            modelBuilder.Entity("EventSourceDemo.Issue", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Boardid")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("stateid")
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Boardid");

                    b.HasIndex("stateid");

                    b.ToTable("issues");
                });

            modelBuilder.Entity("EventSourceDemo.State", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Boardid")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Boardid");

                    b.ToTable("states");
                });

            modelBuilder.Entity("EventSourceDemo.Issue", b =>
                {
                    b.HasOne("EventSourceDemo.Board", null)
                        .WithMany("issues")
                        .HasForeignKey("Boardid");

                    b.HasOne("EventSourceDemo.State", "state")
                        .WithMany()
                        .HasForeignKey("stateid");

                    b.Navigation("state");
                });

            modelBuilder.Entity("EventSourceDemo.State", b =>
                {
                    b.HasOne("EventSourceDemo.Board", null)
                        .WithMany("states")
                        .HasForeignKey("Boardid");
                });

            modelBuilder.Entity("EventSourceDemo.Board", b =>
                {
                    b.Navigation("issues");

                    b.Navigation("states");
                });
#pragma warning restore 612, 618
        }
    }
}
