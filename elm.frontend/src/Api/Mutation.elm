-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Mutation exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias CreateBacklogRequiredArguments =
    { title : String
    , project : Api.ScalarCodecs.Uuid
    }


{-| Creates a new Backlog
-}
createBacklog :
    CreateBacklogRequiredArguments
    -> SelectionSet decodesTo Api.Object.Backlog
    -> SelectionSet decodesTo RootMutation
createBacklog requiredArgs____ object____ =
    Object.selectionForCompositeField "createBacklog" [ Argument.required "title" requiredArgs____.title Encode.string, Argument.required "project" requiredArgs____.project (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecUuid) ] object____ Basics.identity


type alias CreateIssueRequiredArguments =
    { create : Api.InputObject.IssueCreateInput }


{-| Creates an Issue
-}
createIssue :
    CreateIssueRequiredArguments
    -> SelectionSet decodesTo Api.Object.Issue
    -> SelectionSet decodesTo RootMutation
createIssue requiredArgs____ object____ =
    Object.selectionForCompositeField "createIssue" [ Argument.required "create" requiredArgs____.create Api.InputObject.encodeIssueCreateInput ] object____ Basics.identity


type alias CreateProjectRequiredArguments =
    { name : String
    , short : String
    }


{-| Creates a new Project
-}
createProject :
    CreateProjectRequiredArguments
    -> SelectionSet decodesTo Api.Object.Project
    -> SelectionSet decodesTo RootMutation
createProject requiredArgs____ object____ =
    Object.selectionForCompositeField "createProject" [ Argument.required "name" requiredArgs____.name Encode.string, Argument.required "short" requiredArgs____.short Encode.string ] object____ Basics.identity


type alias RemoveBacklogRequiredArguments =
    { id : Api.ScalarCodecs.Uuid }


{-| Removes a Backlog
-}
removeBacklog :
    RemoveBacklogRequiredArguments
    -> SelectionSet decodesTo Api.Object.Backlog
    -> SelectionSet decodesTo RootMutation
removeBacklog requiredArgs____ object____ =
    Object.selectionForCompositeField "removeBacklog" [ Argument.required "id" requiredArgs____.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecUuid) ] object____ Basics.identity


type alias RemoveIssueRequiredArguments =
    { id : Api.ScalarCodecs.Uuid }


{-| Remove an Issue
-}
removeIssue :
    RemoveIssueRequiredArguments
    -> SelectionSet decodesTo Api.Object.Issue
    -> SelectionSet decodesTo RootMutation
removeIssue requiredArgs____ object____ =
    Object.selectionForCompositeField "removeIssue" [ Argument.required "id" requiredArgs____.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecUuid) ] object____ Basics.identity


type alias RemoveProjectRequiredArguments =
    { id : Api.ScalarCodecs.Uuid }


{-| Removes a Project
-}
removeProject :
    RemoveProjectRequiredArguments
    -> SelectionSet decodesTo Api.Object.Project
    -> SelectionSet decodesTo RootMutation
removeProject requiredArgs____ object____ =
    Object.selectionForCompositeField "removeProject" [ Argument.required "id" requiredArgs____.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecUuid) ] object____ Basics.identity


type alias UpdateIssueRequiredArguments =
    { update : Api.InputObject.IssueUpdateInput }


{-| Updates an Issue
-}
updateIssue :
    UpdateIssueRequiredArguments
    -> SelectionSet decodesTo Api.Object.Issue
    -> SelectionSet decodesTo RootMutation
updateIssue requiredArgs____ object____ =
    Object.selectionForCompositeField "updateIssue" [ Argument.required "update" requiredArgs____.update Api.InputObject.encodeIssueUpdateInput ] object____ Basics.identity


type alias UpdateProjectRequiredArguments =
    { id : Api.ScalarCodecs.Uuid
    , name : String
    }


{-| Updates a Project. Returns the previous value.
-}
updateProject :
    UpdateProjectRequiredArguments
    -> SelectionSet decodesTo Api.Object.Project
    -> SelectionSet decodesTo RootMutation
updateProject requiredArgs____ object____ =
    Object.selectionForCompositeField "updateProject" [ Argument.required "id" requiredArgs____.id (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecUuid), Argument.required "name" requiredArgs____.name Encode.string ] object____ Basics.identity
