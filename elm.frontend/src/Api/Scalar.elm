-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Scalar exposing (Codecs, Uuid(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Uuid
    = Uuid String


defineCodecs :
    { codecUuid : Codec valueUuid }
    -> Codecs valueUuid
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueUuid
    -> { codecUuid : Codec valueUuid }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder :
    (RawCodecs valueUuid -> Codec getterValue)
    -> Codecs valueUuid
    -> getterValue
    -> Graphql.Internal.Encode.Value
unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueUuid
    = Codecs (RawCodecs valueUuid)


type alias RawCodecs valueUuid =
    { codecUuid : Codec valueUuid }


defaultCodecs : RawCodecs Uuid
defaultCodecs =
    { codecUuid =
        { encoder = \(Uuid raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Uuid
        }
    }
