-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Backlog exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


id : SelectionSet Api.ScalarCodecs.Uuid Api.Object.Backlog
id =
    Object.selectionForField "ScalarCodecs.Uuid" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecUuid |> .decoder)


name : SelectionSet String Api.Object.Backlog
name =
    Object.selectionForField "String" "name" [] Decode.string


project :
    SelectionSet decodesTo Api.Object.Project
    -> SelectionSet decodesTo Api.Object.Backlog
project object____ =
    Object.selectionForCompositeField "project" [] object____ Basics.identity


issues :
    SelectionSet decodesTo Api.Object.Issue
    -> SelectionSet (List decodesTo) Api.Object.Backlog
issues object____ =
    Object.selectionForCompositeField "issues" [] object____ (Basics.identity >> Decode.list)
